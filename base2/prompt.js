// 기본적으로 제공하는 창 : alert(알려줌) , prompt(입력받음) , confirm(확인받음)
// 요약
alert(`정상적으로 삭제 되었습니다.`); // 백틱, "" , '' 다 가능
prompt("예약일을 입력하세요", "2020=10-");
confirm("구독을 취소 하시겠습니까?");

// alert : 알려줌 (경고창을 띄우는 함수)
// - 사용자가 확인버튼을 누르기 전까지 떠있음
// - 확인버튼을 누르면 닫힌다.
//ex) 비밀번호가 틀렸습니다. 이름을 입력해주세요
//const name = "Mike";
//age = 30;
//alert(name);
//console.log(name);

// prompt : (값) 입력 받음
// - 사용자에게 메시지를 보여주고 어떤 값을 입력  받을 수 있다.
// - 입력창 prompt가 떴는데 취소를 누르면 어떤 값이 들어갈까? null
// - prompt는 default 값도 입력할 수 있다. (두개의 인수를 받음)

// 예제1)  String 연산자로 이어 붙이기
//const name = prompt("이름을 입력하세요");
//alert("환영합니다, " + name + "님");

// 예제2)`(백틱)을 사용해서
const name = prompt("이름을 입력하세요");
alert(`안녕하세요, ${name}님. 환영합니다.`);
console.log(name);
console.log(typeof name);

// 예제3) 만약 prompt 취소를 누르면 null 값이 변수에 들어감
// 그래서 나온 예제가 3임 (디폴트 값을 설정)
// prompt는 2개의 인수를 받을 수 있다.
// 첫번째 인수는 메시지 , 두번째 인수는 디폴트 값
//const name = prompt("예약일을 입력해주세요.", "2020-10-"); // 뒤에 있는 것이 입력받을 디폴트 값
//alert(`안녕하세요, ${name} 예약합니다.`);

// confirm : 확인 받음
// - 사용자 action을 재확인 받을 때 사용 (확인, 취소 버튼이 존재 )
// - 결제 하시겠습니까? , 정말 삭제 하시겠습니까?
// 사용자 액션을 재확인 할 때 사용
const isAdult = confirm("당신은 성인 입니까?");
console.log(isAdult); // true, false 값이 출력 -> 이 결과값으로 로직을 구성할 수 있다.
// 변수를 출력해보면 확인을 누르면 true가 뜨고
// 취소를 누르면 false가 뜬다

// alert는 확인 버튼만 있지만, prompt, confirm은 확인, 취소 버튼 다 있음
// alert는 변수에 할당 안하지만 prompt, confirm은 변수에 할당하여 사용

/*
단점 
1. (창이 떠있는 동안) 스크립트 일시 정지
- 창을 닫기 전까지는 이후 동작의 제한을 받는다. (번거로움)
- 직접 확인버튼을 눌러야함
- 유튜브에서 어떤 알림을 alert로 받는다면 확인버튼을 누르기 전에 플레이 영상에 제한을 줌

2. 스타일링 불가
- 위치와 모양을 정할 수 없다.
- 브라우저마다 모양이 조금씩 다르다.
- 디자이너가 싫어한다.
- 그래서 html과 css로 만든 (독자적인 )모듈 창이 굉장히 많이 사용된다.


장점
1. 빠르고 단순하게 적용가능한 메소드임
2. 굉장히 많이 사용됨



*/
